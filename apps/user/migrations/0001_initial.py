# Generated by Django 3.1.1 on 2020-09-23 02:51

import apps.common.utils
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('code', models.CharField(default=apps.common.utils.generate_referral_code, max_length=255, unique=True, verbose_name='Referral Code')),
                ('role', models.SmallIntegerField(choices=[(0, 'Admin'), (1, 'Student'), (2, 'Teacher')], null=True, verbose_name='Role')),
                ('is_used', models.BooleanField(default=False, help_text='Is referral code used', verbose_name='Is Used')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('school_id', models.CharField(max_length=255, verbose_name='Id')),
                ('graduation_class', models.DateField(null=True, verbose_name='Graduation Class')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('role', models.SmallIntegerField(choices=[(0, 'Admin'), (1, 'Student'), (2, 'Teacher')], null=True, verbose_name='Role')),
                ('is_staff', models.BooleanField(default=False, help_text='for django reference', verbose_name='Staff status')),
                ('is_profile_complete', models.BooleanField(default=False, verbose_name='Profile Status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
